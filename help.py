from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram_media_group import media_group_handler

from user import keyboards
from states import UserForm
from core.config import settings, bot

router = Router()


@router.message(Command('help'))
async def send_help(message: Message, state: FSMContext):
    """–ö–æ–º–∞–Ω–¥–∞ /help. –û—á–∏—â–∞–µ—Ç state –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã."""
    await state.clear()
    await state.set_state(UserForm.wait_help_message)

    msg = await message.answer(
        '–û–ø–∏—à–∏—Ç–µ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –≤–æ–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É',
        reply_markup=keyboards.delete()
    )
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
    await state.update_data(info_msg_id=msg.message_id)


@router.message(F.media_group_id, F.photo | F.video, UserForm.wait_help_message)
@media_group_handler
async def handle_media_group(messages: list[Message], state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ–¥–∏–∞-–≥—Ä—É–ø–ø—ã (—Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ) –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞."""
    await bot.forward_messages(
        chat_id=settings.ADMIN_ID,
        from_chat_id=messages[0].chat.id,
        message_ids=[msg.message_id for msg in messages]
    )

    await _send_admin_notification(messages[0].from_user.id)
    await _clear_user_state(state, messages[0].chat.id)


@router.message(UserForm.wait_help_message)
async def handle_text_message(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞."""
    await bot.forward_message(
        chat_id=settings.ADMIN_ID,
        from_chat_id=message.chat.id,
        message_id=message.message_id
    )

    await _send_admin_notification(message.from_user.id)
    await _clear_user_state(state, message.chat.id)


async def _send_admin_notification(user_id: int):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞ –æ –Ω–æ–≤–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏."""
    await bot.send_message(
        settings.ADMIN_ID,
        f'üì© –ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <code>{user_id}</code>\n\n<i>–ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–º</i>'
    )


async def _clear_user_state(state: FSMContext, chat_id: int):
    """–û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º '–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É'."""
    data = await state.get_data()
    await state.clear()

    info_msg_id = data.get('info_msg_id')
    if info_msg_id:
        try:
            await bot.delete_message(chat_id=chat_id, message_id=info_msg_id)
        except:
            pass

    await bot.send_message(chat_id, '‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.')
