import logging
import traceback

import aiogram.exceptions
from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery

import crud
from core.config import bot
from admin import keyboards
from states import AdminForm
from utils import PrivateChatFilterAdmin

router = Router()


@router.message(F.text == '–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å', PrivateChatFilterAdmin())
async def admin_panel(message: Message):
    """–û—Ç–∫—Ä—ã–≤–∞–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –ø–æ —Ç–µ–∫—Å—Ç—É '–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å'."""
    await message.answer(
        '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</b>',
        reply_markup=keyboards.admin_panel()
    )


@router.callback_query(F.data == 'admin_panel', PrivateChatFilterAdmin())
async def admin_panel_callback(callback: CallbackQuery, state: FSMContext):
    """–û—Ç–∫—Ä—ã–≤–∞–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –ø–æ –∫–Ω–æ–ø–∫–µ."""
    await state.clear()
    await callback.message.edit_text(
        '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</b>',
        reply_markup=keyboards.admin_panel()
    )


@router.callback_query(F.data == 'find_user', PrivateChatFilterAdmin())
async def find_user(callback: CallbackQuery, state: FSMContext):
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    await state.set_state(AdminForm.find_user)
    msg = await callback.message.edit_text('–í–≤–µ–¥–∏—Ç–µ <b>Telegram ID</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', reply_markup=keyboards.back())
    await state.update_data(info_msg_id=msg.message_id)


@router.message(F.text, AdminForm.find_user, PrivateChatFilterAdmin())
async def find_user_valid(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ ID."""
    user_id = message.text
    if not user_id.isdigit():
        await message.answer('‚ùóÔ∏è –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
        return

    user_info = await crud.get_user(int(user_id))
    if not user_info:
        await message.answer('‚ùå –¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.')
        return

    # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    data = await state.get_data()
    info_msg_id = data.get('info_msg_id')

    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()

    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–≤–æ–¥–æ–º ID
    if info_msg_id:
        try:
            await bot.delete_message(chat_id=message.chat.id, message_id=info_msg_id)
        except:
            pass

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    username = f"@{user_info['username']}" if user_info.get('username') else '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
    
    await message.answer(
        text=(
            f'üë§ <b>ID:</b> {user_info["id"]}\n'
            f'üë§ <b>Username:</b> {username}\n'
        ),
        reply_markup=keyboards.back()
    )


@router.message(F.text, F.reply_to_message, PrivateChatFilterAdmin())
async def reply_help_message(message: Message):
    """–û—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."""
    reply_msg = message.reply_to_message
    if not reply_msg.forward_from:
        await message.answer('‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')
        return

    text = f'<b>–û—Ç–≤–µ—Ç –æ—Ç –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:</b>\n\n<blockquote>{message.text}</blockquote>'

    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await bot.send_message(chat_id=reply_msg.forward_from.id, text=text)
    except aiogram.exceptions.TelegramBadRequest:
        logging.error(traceback.format_exc())
